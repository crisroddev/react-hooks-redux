{"ast":null,"code":"import _slicedToArray from \"/Users/crisrodriguez/Dropbox/dev/react-hooks-redux-1/pixabay/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/crisrodriguez/Dropbox/dev/react-hooks-redux-1/pixabay/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Buscador from './components/Buscador';\nimport ListadoImagenes from './components/ListadoImagenes';\n\nfunction App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        busqueda = _useState2[0],\n        setBusqueda = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imagenes = _useState4[0],\n        guardarImagenes = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        paginaActual = _useState6[0],\n        setPaginaActual = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        totalPaginas = _useState8[0],\n        setTotalPaginas = _useState8[1];\n\n  useEffect(() => {\n    // No busque si no hago submit\n    if (busqueda === '') return;\n\n    const consultarApi = async () => {\n      const imagenesPorPagina = 30;\n      const key = '13572348-e998cd81f08f11243f328ed57';\n      const url = \"https://pixabay.com/api/?key=\".concat(key, \"&q=\").concat(busqueda, \"&per_page=\").concat(imagenesPorPagina, \"&page=\").concat(paginaActual);\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n      guardarImagenes(resultado.hits); // Calcular Total de Paginas Redondeado Hacia Arriba\n\n      const calcularTotalPaginas = Math.ceil(resultado.totalHits / imagenesPorPagina);\n      setTotalPaginas(calcularTotalPaginas); // Llevar ausuario hacia parte superior\n\n      const jumbotron = document.querySelector('.jumbotron');\n      jumbotron.scrollIntoView('smooth', 'start');\n    };\n\n    consultarApi();\n  }, [busqueda, paginaActual]);\n\n  const paginaAnterior = () => {\n    let nuevaPaginaAnterior = paginaActual - 1; // Colocarlo en el State\n\n    setPaginaActual(nuevaPaginaAnterior);\n  };\n\n  const paginaSiguiente = () => {\n    let nuevaPaginaSiguiente = paginaActual + 1; // Colocarlo en State\n\n    setPaginaActual(nuevaPaginaSiguiente);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lead text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Buscador de Imagenes\"), React.createElement(Buscador, {\n    setBusqueda: setBusqueda,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ListadoImagenes, {\n    imagenes: imagenes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), paginaActual === 1 ? null : React.createElement(\"button\", {\n    onClick: paginaAnterior,\n    type: \"button\",\n    className: \"btn btn-info mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Anterior \\xAB\"), paginaActual === totalPaginas ? null : React.createElement(\"button\", {\n    onClick: paginaSiguiente,\n    type: \"button\",\n    className: \"btn btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Siguiente \\xBB\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/crisrodriguez/Dropbox/dev/react-hooks-redux-1/pixabay/src/App.js"],"names":["React","useEffect","useState","axios","Buscador","ListadoImagenes","App","busqueda","setBusqueda","imagenes","guardarImagenes","paginaActual","setPaginaActual","totalPaginas","setTotalPaginas","consultarApi","imagenesPorPagina","key","url","respuesta","fetch","resultado","json","hits","calcularTotalPaginas","Math","ceil","totalHits","jumbotron","document","querySelector","scrollIntoView","paginaAnterior","nuevaPaginaAnterior","paginaSiguiente","nuevaPaginaSiguiente"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Buscador from './components/Buscador';\nimport ListadoImagenes from './components/ListadoImagenes';\n\nfunction App() {\n\n  const [ busqueda, setBusqueda ] = useState('');\n  const [ imagenes, guardarImagenes ] = useState([]);\n  const [ paginaActual, setPaginaActual ] = useState(1);\n  const [ totalPaginas, setTotalPaginas ] = useState(1);\n\n  useEffect(() => {\n\n    // No busque si no hago submit\n    if(busqueda === '') return;\n\n    const consultarApi = async () => {\n      const imagenesPorPagina = 30;\n      const key = '13572348-e998cd81f08f11243f328ed57';\n      const url =`https://pixabay.com/api/?key=${key}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaActual}`;\n\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n      \n      guardarImagenes(resultado.hits)\n\n      // Calcular Total de Paginas Redondeado Hacia Arriba\n      const calcularTotalPaginas = Math.ceil(resultado.totalHits / imagenesPorPagina);\n      setTotalPaginas(calcularTotalPaginas);\n\n      // Llevar ausuario hacia parte superior\n      const jumbotron = document.querySelector('.jumbotron');\n      jumbotron.scrollIntoView('smooth', 'start');\n    } \n    consultarApi();\n  }, [busqueda, paginaActual])\n\n  const paginaAnterior = () => {\n    let nuevaPaginaAnterior = paginaActual - 1;\n    \n    // Colocarlo en el State\n    setPaginaActual(nuevaPaginaAnterior);\n  }\n\n  const paginaSiguiente = () => {\n    let nuevaPaginaSiguiente = paginaActual + 1;\n\n    // Colocarlo en State\n    setPaginaActual(nuevaPaginaSiguiente)\n  }\n\n  return (\n    <div className=\"app container\">\n      <div className=\"jumbotron\">\n        <p className=\"lead text-center\">\n            Buscador de Imagenes\n        </p>\n        <Buscador\n          setBusqueda={setBusqueda}\n        />\n      </div>\n      <div className=\"row justify-content-center\">\n        <ListadoImagenes\n          imagenes={imagenes}\n        />\n        { (paginaActual === 1) ? \n          null : (\n            <button\n              onClick={paginaAnterior}\n              type=\"button\"\n              className=\"btn btn-info mr-1\">\n                Anterior &laquo;\n        </button>\n          )\n        }\n        \n        {( paginaActual === totalPaginas ) ? \n          null : (\n            <button\n              onClick={paginaSiguiente}\n              type=\"button\"\n              className=\"btn btn-info\">\n                Siguiente &raquo;\n        </button>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}